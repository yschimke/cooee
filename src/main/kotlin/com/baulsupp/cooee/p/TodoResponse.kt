// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: api.proto
package com.baulsupp.cooee.p

import com.squareup.wire.FieldEncoding
import com.squareup.wire.Message
import com.squareup.wire.ProtoAdapter
import com.squareup.wire.ProtoReader
import com.squareup.wire.ProtoWriter
import com.squareup.wire.WireField
import com.squareup.wire.internal.checkElementsNotNull
import com.squareup.wire.internal.redactElements
import kotlin.Any
import kotlin.Boolean
import kotlin.Int
import kotlin.String
import kotlin.collections.List
import kotlin.jvm.JvmField
import okio.ByteString

class TodoResponse(
  @field:WireField(
    tag = 1,
    adapter = "com.baulsupp.cooee.p.CommandSuggestion#ADAPTER",
    label = WireField.Label.REPEATED
  )
  @JvmField
  val todos: List<CommandSuggestion> = emptyList(),
  unknownFields: ByteString = ByteString.EMPTY
) : Message<TodoResponse, TodoResponse.Builder>(ADAPTER, unknownFields) {
  override fun newBuilder(): Builder {
    val builder = Builder()
    builder.todos = todos
    builder.addUnknownFields(unknownFields)
    return builder
  }

  override fun equals(other: Any?): Boolean {
    if (other === this) return true
    if (other !is TodoResponse) return false
    return unknownFields == other.unknownFields
        && todos == other.todos
  }

  override fun hashCode(): Int {
    var result = super.hashCode
    if (result == 0) {
      result = unknownFields.hashCode()
      result = result * 37 + todos.hashCode()
      super.hashCode = result
    }
    return result
  }

  override fun toString(): String {
    val result = mutableListOf<String>()
    if (todos.isNotEmpty()) result += """todos=$todos"""
    return result.joinToString(prefix = "TodoResponse{", separator = ", ", postfix = "}")
  }

  fun copy(todos: List<CommandSuggestion> = this.todos, unknownFields: ByteString =
      this.unknownFields): TodoResponse = TodoResponse(todos, unknownFields)

  class Builder : Message.Builder<TodoResponse, Builder>() {
    @JvmField
    var todos: List<CommandSuggestion> = emptyList()

    fun todos(todos: List<CommandSuggestion>): Builder {
      checkElementsNotNull(todos)
      this.todos = todos
      return this
    }

    override fun build(): TodoResponse = TodoResponse(
      todos = todos,
      unknownFields = buildUnknownFields()
    )
  }

  companion object {
    @JvmField
    val ADAPTER: ProtoAdapter<TodoResponse> = object : ProtoAdapter<TodoResponse>(
      FieldEncoding.LENGTH_DELIMITED, 
      TodoResponse::class, 
      "type.googleapis.com/com.baulsupp.cooee.p.TodoResponse"
    ) {
      override fun encodedSize(value: TodoResponse): Int = 
        CommandSuggestion.ADAPTER.asRepeated().encodedSizeWithTag(1, value.todos) +
        value.unknownFields.size

      override fun encode(writer: ProtoWriter, value: TodoResponse) {
        CommandSuggestion.ADAPTER.asRepeated().encodeWithTag(writer, 1, value.todos)
        writer.writeBytes(value.unknownFields)
      }

      override fun decode(reader: ProtoReader): TodoResponse {
        val todos = mutableListOf<CommandSuggestion>()
        val unknownFields = reader.forEachTag { tag ->
          when (tag) {
            1 -> todos.add(CommandSuggestion.ADAPTER.decode(reader))
            else -> reader.readUnknownField(tag)
          }
        }
        return TodoResponse(
          todos = todos,
          unknownFields = unknownFields
        )
      }

      override fun redact(value: TodoResponse): TodoResponse = value.copy(
        todos = value.todos.redactElements(CommandSuggestion.ADAPTER),
        unknownFields = ByteString.EMPTY
      )
    }
  }
}
