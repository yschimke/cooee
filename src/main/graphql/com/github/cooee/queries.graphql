query TopProjects {
    viewer {
        topRepositories(first:100, orderBy:{field: UPDATED_AT, direction:DESC}) {
            nodes {
                nameWithOwner
                description
            }
        }
    }
}

query Project($owner: String!, $repo: String!) {
    repository(owner: $owner, name: $repo) {
        name
        description
        url
        homepageUrl
    }
}

query Issue($owner: String!, $repo: String!, $number: Int!) {
    repository(owner: $owner, name: $repo) {
        issueOrPullRequest(number: $number) {
            ... on Issue {
                title
                author {
                    login
                }
                bodyText
                url
                id
            }
            ... on PullRequest {
                title
                author {
                    login
                }
                bodyText
                url
                id
            }
        }
    }
}

mutation AddComment($subjectId: ID!, $body: String!) {
    addComment(input: {subjectId: $subjectId, body: $body}) {
        clientMutationId
    }
}

query OpenPullRequests {
    viewer {
        login
        pullRequests(last: 30, states:[OPEN], orderBy: {field: UPDATED_AT, direction: ASC}) {
            nodes {
                number
                permalink
                state
                title
                createdAt
                updatedAt
                repository {
                    nameWithOwner
                }
                author {
                    login
                    ... on User {
                        name
                    }
                }
                comments(last: 5) {
                    nodes {
                        author {
                            login
                            ... on User {
                                name
                            }
                        }
                        bodyText
                    }
                }
                reviews(first: 2, states: [APPROVED, CHANGES_REQUESTED]) {
                    nodes {
                        state
                    }
                }
            }
        }
    }
}
